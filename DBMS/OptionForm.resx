<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /8/7///f+AAAH/7//3/+AAB/////////////////
</value>
  </data>
</root>